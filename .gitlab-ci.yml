variables:
  DOCKER_TAG: ${CI_COMMIT_SHORT_SHA}
  DOCKER_IMAGE: ${CI_REGISTRY_IMAGE}
  GO_IMAGE: golang:1.13-buster

# Template
.go:
  image: ${GO_IMAGE}
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod/

stages:
  - build
  - test
  - deploy

# Stage: build
##############################################################################

build:
  stage: build
  extends: .go
  script:
    - go mod tidy
    - go install github.com/swaggo/swag/cmd/swag
    - ${GOPATH}/bin/swag init -p pascalcase -g "start.go" -o "./doc/api/"
    - go build
  artifacts:
    paths:
      - doc/api/swagger.json
      - doc/api/docs.go

# Stage: test
##############################################################################

test:
  stage: test
  extends: .go
  variables:
    POSTGRES_DB: testvillasdb
    POSTGRES_USER: villas
    POSTGRES_PASSWORD: villas
    POSTGRES_HOST: postgres
    RABBITMQ_DEFAULT_USER: villas
    RABBITMQ_DEFAULT_PASS: villas
    MINIO_ROOT_USER: minio-villas
    MINIO_ROOT_PASSWORD: minio-villas
    AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER}
    AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
    S3_BUCKET: villas-web
    S3_ENDPOINT: http://minio:9000
    S3_PATHSTYLE: 'true'
    S3_NOSSL: 'true'
    AMQP_HOST: rabbitmq:5672
    AMQP_USER: villas
    AMQP_PASS: villas
    PORT: 4000
    DB_NAME: ${POSTGRES_DB}
    DB_HOST: ${POSTGRES_HOST}
    DB_USER: ${POSTGRES_USER}
    DB_PASS: ${POSTGRES_PASSWORD}
    BASE_PATH: /api
    MODE: test
    ADMIN_USER: User_0
    ADMIN_PASS: xyz789
  services:
    - postgres:latest
    - rabbitmq:latest
    - name: minio/minio:RELEASE.2021-01-16T02-19-44Z
      command: ['server', '/minio']
      alias: minio
  before_script:
    - wget -qO /usr/bin/mc https://dl.min.io/client/mc/release/linux-amd64/mc && chmod +x /usr/bin/mc
    - mc alias set gitlab http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}
    - mc mb gitlab/${S3_BUCKET}
  script:
    - go mod tidy
    - go test $(go list ./... )
       -p 1
       -covermode=count
       -coverprofile ./testcover.txt
    - go tool cover -func=testcover.txt
  dependencies:
    - build


# Stage: deploy
##############################################################################

deploy:
  stage: deploy
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"username\":\"${CI_REGISTRY_USER}\",\"password\":\"${CI_REGISTRY_PASSWORD}\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context ${CI_PROJECT_DIR}
      --dockerfile ${CI_PROJECT_DIR}/Dockerfile
      --destination ${DOCKER_IMAGE}:${DOCKER_TAG}
      --snapshotMode=redo
      --cache=true
      --cache-ttl=12h
  dependencies:
    - test
