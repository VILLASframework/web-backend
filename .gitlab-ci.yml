variables:
  TEST_FOLDER: database
  DOCKER_IMAGE: ${CI_REGISTRY}/acs/public/villas/web-backend-go
  DOCKER_IMAGE_DEV: ${CI_REGISTRY}/acs/public/villas/web-backend-go/dev

stages:
  - prepare
  - build
  - test
  - deploy

# Stage: prepare
##############################################################################

# Build docker images
prepare:redoc:
  stage: prepare
  script:
    - docker build -f doc/api/Dockerfile -t redoc .
  tags:
    - shell
    - linux

prepare:docker-dev:
  stage: prepare
  script:
    - docker build -f Dockerfile.dev -t $DOCKER_IMAGE_DEV .
  tags:
    - shell
    - linux

# Stage: build
##############################################################################

build:backend:
  stage: build
  tags:
    - docker
  image: ${DOCKER_IMAGE_DEV}
  script:
    - go mod tidy
    - go get -u github.com/swaggo/swag/cmd/swag
    - ~/go/bin/swag init -p pascalcase -g "start.go" -o "./doc/api/"
    - go build
  dependencies:
    - prepare:docker-dev
  artifacts:
    paths:
      - doc/api/swagger.json
      - doc/api/docs.go

build:docker:
  stage: build
  tags:
    - shell
    - linux
  script:
    - docker build -t ${DOCKER_IMAGE} .


# Stage: test
##############################################################################

test:apidoc:
  stage: test
  tags:
    - docker
  image: redoc
  script:
    - cd doc/api
    - redoc-cli bundle --cdn --title "VILLASweb Backend API Documentation" --output index.html swagger.json
  dependencies:
    - build:backend
  artifacts:
    paths:
      - doc/api/index.html
      - doc/api/swagger.json

test:all:
  stage: test
  tags:
    - docker
  image: ${DOCKER_IMAGE_DEV}
  script:
    - /etc/init.d/postgresql start
    - go mod tidy
    - go test $(go list ./... ) -p 1 -covermode=count -coverprofile ./testcover.txt
    - go tool cover -func=testcover.txt
  dependencies:
    - build:backend

test:database:
  stage: test
  tags:
    - docker
  image: ${DOCKER_IMAGE_DEV}
  script:
    - /etc/init.d/postgresql start
    - go mod tidy
    - cd ${TEST_FOLDER}
    - go test -v
  dependencies:
    - build:backend

test:scenario:
  extends: test:database
  variables:
    TEST_FOLDER: routes/scenario

test:simulationmodel:
  extends: test:scenario
  variables:
    TEST_FOLDER: routes/simulationmodel

test:signal:
  extends: test:database
  variables:
    TEST_FOLDER: routes/signal

test:dashboard:
  extends: test:database
  variables:
    TEST_FOLDER: routes/dashboard

test:widget:
  extends: test:database
  variables:
    TEST_FOLDER: routes/widget

test:simulator:
  extends: test:database
  variables:
    TEST_FOLDER: routes/simulator

test:file:
  extends: test:database
  variables:
    TEST_FOLDER: routes/file

test:user:
  extends: test:database
  variables:
    TEST_FOLDER: routes/user

# Stage: deploy
##############################################################################

deploy:docker:
  stage: deploy
  before_script:
  - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  script:
    - docker push ${DOCKER_IMAGE}
    - docker push ${DOCKER_IMAGE_DEV}
  dependencies:
    - prepare:docker-dev
    - build:docker
  only:
    - master
  tags:
    - shell
    - linux

# deploy:upload:
#   stage: deploy
#   script:
#     - cd doc/api
#     - rsync --copy-links --chown ${DEPLOY_USER}:${DEPLOY_USER} index.html swagger.json ${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_PATH}
#   dependencies:
#     - test:apidoc
#   only:
#     - master
#   tags:
#     - shell
